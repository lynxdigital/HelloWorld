-------------------------------
Hello World Deployment Solution
Geoffrey Harrison
Email: Geoffrey.Harrison@lynxdigital.com.au
-------------------------------

--------------
 INTRODUCTION
--------------
These scripts and modules will deploy the Sinatra "Hello World" application from github to a vanilla CentOS 6 installation. They are designed to show an array of different techniques for managing Puppet Manifests and Modules.

All the code presented has been parsed successfully with 'puppet-lint'. (except 'secure' module)

The modules have been tested with:
- CentOS 6.4 Vanilla Minimum Installation (Some modules are CentOS 6 specific).
- Puppet 3.2

--------------
 INSTALLATION
--------------
In order to use the deployment script:

1. Install a vanilla installation of CentOS 6.4 Minimum
2. Login with 'root' account configured during install and activate the network card. 
   -> Ensure the installation has Internet access.
3. Deploy the files to the server
4. Modify the proxy.sh file for any proxies which may be required to reach the Internet.
5. Make the deployment folder the current directory ('cd <FOLDER>')
6. Execute "sh puppet_install.sh" to install puppet from Internet repositories.
7. Execute "sh deploy.sh" to deploy the application and secure the server installation.

Once successfully complete, the Hello World application will be active and the server will be secured.

---------------
 SERVER ACCESS
---------------
Using the provided PEM file: ssh -i <PEMFILE> user@<IP>

N.B. Password authentication is disabled as is remote 'root' access by default.

----------------
 PUPPET MODULES
----------------
The deployment uses a number of configurable, re-usable modules all linked together via a single application deployment class. Executing this class will install everything else.

The name of the deployment class is 'ruby::app::helloWorld'.

Below is a description of each module:
ACCOUNTS - Installs server groups and users. Also configures SSH key access for user accounts.
APACHE   - Installs and configures the base Apache web server.
BASE     - Links together base compoenents which are installed to all servers.
CONCAT   - Imported module used for concaternating files from different sources.
FIREWALL - Builds firewall using IPTables dynamically for other modules.
GIT      - Installs git and clones git repositories.
NTP      - Installs ntp and configures as a client by default to Internet time server.
RUBY     - Install ruby and passenger. Deploys ruby applications and gems.
SECURE   - Contains security enhancements for server. Runs during "post" phase. Disables insecure services, protocols, filesystems, and hardens config even if other modules have changed settings.
SSH		 - Install SSH server/client and configure SSH services.
SUDO	 - Install and configure sudo. Create sudo files for individual users.
TIMEZONE - Install tzdata and configures server timezone.
VCSREPO  - Imported module for handling version control systems.
YUM      - Install and manage yum modules on system.
